apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2022-09-22T16:48:47Z"
  generateName: microservice-1-5c97989869-
  labels:
    app: microservice-1
    env: dev
    pod-template-hash: 5c97989869
  name: microservice-1-5c97989869-nrnjd
  namespace: dev
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: microservice-1-5c97989869
    uid: e7854292-8eb9-4e1c-917a-25322b8593f2
  resourceVersion: "102221"
  uid: 6f25a062-41eb-4062-a084-90f695e7e8fd
spec:
  containers:
  - env:
    - name: CUSTOM_MESSAGE
      valueFrom:
        configMapKeyRef:
          key: custom.message
          name: microservice-1-config-map
    envFrom:
    - configMapRef:
        name: microservice-1-config-map-global
    image: microservice-1:1
    imagePullPolicy: IfNotPresent
    name: microservice-1
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6mc24
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-6mc24
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2022-09-22T16:48:47Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2022-09-22T16:48:48Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2022-09-22T16:48:48Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2022-09-22T16:48:47Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://d662926788097366f744d910c4f4e99f1e5cef3eb819d843aeeb3c8527c62239
    image: microservice-1:1
    imageID: docker://sha256:68b2219590693b3a4d392db662eb30870a90b56b3908047ad747c45f8600258c
    lastState: {}
    name: microservice-1
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2022-09-22T16:48:48Z"
  hostIP: 192.168.49.2
  phase: Running
  podIP: 172.17.0.2
  podIPs:
  - ip: 172.17.0.2
  qosClass: BestEffort
  startTime: "2022-09-22T16:48:47Z"
